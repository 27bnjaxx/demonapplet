# Nombre del Workflow de GitHub Actions
name: Compilar Applet de Java Card

# Disparadores: Cuándo se ejecutará este workflow
on:
  # Se ejecuta cada vez que haces un "push" a la rama "main"
  push:
    branches: [ "main" ]
  # También permite ejecutarlo manualmente desde la pestaña "Actions" en GitHub
  workflow_dispatch:

# Definición de los trabajos (jobs) que se ejecutarán
jobs:
  build:
    # El tipo de máquina virtual donde se ejecutará el trabajo
    runs-on: ubuntu-latest

    steps:
      # 1. Descargar el código de tu repositorio
      - name: Clonar Repositorio
        uses: actions/checkout@v4

      # 2. Configurar el entorno de Java (JDK 8 es el más compatible)
      - name: Configurar Java JDK 8
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'

      # 3. Preparar el Classpath dinámicamente
      #    Encuentra todos los archivos .jar en jcsdk/lib y los une para el compilador.
      - name: Preparar Classpath para la compilación
        id: set_classpath
        run: |
          echo "CLASSPATH_VALUE=$(find jcsdk/lib -name "*.jar" | tr '\n' ':')" >> $GITHUB_ENV

      # 4. Compilar el código Java a .class
      - name: Compilar Código Java con Javac
        run: |
          echo "Usando el siguiente Classpath para compilar: ${{ env.CLASSPATH_VALUE }}"
          mkdir -p build/classes
          javac -g -d build/classes -cp "${{ env.CLASSPATH_VALUE }}" HybridDemonAppletV19.java

      # 5. Convertir los archivos .class a un archivo .cap
      #    IMPORTANTE: Reemplaza el AID si el tuyo es diferente.
      - name: Convertir a formato CAP con la herramienta Converter
        run: |
          java -cp "${{ env.CLASSPATH_VALUE }}" com.sun.javacard.converter.Converter \
            -d build \
            -classdir build/classes \
            -exportpath jcsdk/api_export_files \
            -applet 0xA0:0x00:0x00:0x00:0x62:0x03:0x01:0x0C:0x01 HybridDemonAppletV19 \
            0xA0:0x00:0x00:0x00:0x62:0x03:0x01:0x0C \
            1.0

      # 6. Subir el archivo .cap como un "artefacto"
      #    Esto te permitirá descargar el resultado final desde la página del workflow.
      - name: Subir Artefacto (.cap file)
        uses: actions/upload-artifact@v4
        with:
          name: Applet-CAP-File
          path: build/**/*.cap # Busca el archivo .cap en cualquier subdirectorio de build
