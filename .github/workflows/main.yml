# Nombre del workflow que verás en la pestaña Actions
name: Compilar Applet para Múltiples AIDs

# Esto hace que el workflow se ejecute cada vez que subes cambios
on:
  push:
    branches: [ "main" ]
  # También te permite ejecutarlo manualmente desde la pestaña Actions
  workflow_dispatch:

jobs:
  build-and-convert:
    # Usaremos una máquina virtual de Ubuntu para compilar
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Clonar tu repositorio principal (privado), proporcionando el token explícitamente
      - name: Clonar el repositorio principal
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }} # <-- CORRECCIÓN FINAL

      # Paso 2: Instalar el Kit de Desarrollo de Java (JDK)
      - name: Instalar Java JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      # Paso 3: Clonar el SDK de Java Card público de forma anónima
      - name: Clonar Java Card SDK
        uses: actions/checkout@v4
        with:
          repository: 'ph4r05/javacard-sdk-305'
          path: 'jcsdk'
          fetch-depth: 1
          token: '' # <-- Esto es correcto y se mantiene para evitar conflictos

      # Paso 4: Compilar el código Java (con verificación)
      - name: Compilar el código Java
        run: |
          set -e
          JAVA_FILE="HybridDemonAppletV19.java"
          if [ ! -f "$JAVA_FILE" ]; then
            echo "::error::Archivo no encontrado: $JAVA_FILE"
            exit 1
          fi
          javac -g -cp ./jcsdk/api_export_files/api_classic.jar "$JAVA_FILE"
          echo "Compilación exitosa."

      # Paso 5: Convertir a .cap para cada AID (con script mejorado)
      - name: Convertir a .cap para cada tipo de tarjeta
        run: |
          set -e
          CLASS_NAME="HybridDemonAppletV19"
          declare -A AIDS
          AIDS["Visa"]="A0000000031010"
          AIDS["VisaElectron"]="A0000000032010"
          AIDS["Mastercard"]="A0000000041010"
          AIDS["Maestro"]="A0000000043060"
          AIDS["AmericanExpress"]="A00000002501"
          AIDS["DiscoverDiners"]="A0000001523010"
          AIDS["UnionPay"]="A0000003330101"

          for CARD_NAME in "${!AIDS[@]}"; do
            RAW_AID=${AIDS[$CARD_NAME]}
            PACKAGE_AID=$(echo "$RAW_AID" | sed 's/../&:/g;s/:$//' | sed 's/^/0x/;s/:/:0x/g')
            APPLET_AID="${PACKAGE_AID}:0x01"
            echo "--- Procesando $CARD_NAME ---"
            java -jar ./jcsdk/bin/converter.jar \
              -classdir . \
              -applet "$APPLET_AID" "$CLASS_NAME" \
              -exportpath ./jcsdk/api_export_files \
              -o "${CLASS_NAME}-${CARD_NAME}.cap" \
              "$PACKAGE_AID" 1.0
          done
          echo "Todos los archivos .cap se han generado correctamente."

      # Paso 6: Guardar los artefactos generados
      - name: Subir todos los artefactos .cap
        uses: actions/upload-artifact@v4
        with:
          name: Archivos-CAP-Multiples
          path: '*.cap'
